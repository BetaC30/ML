# -*- coding: utf-8 -*-
"""Movie_recommendation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UywErMXIgnJdCuVOPTilE8rPzcoJD6Ap
"""

import pandas as pd
import numpy as np

df= pd.read_csv(r'https://github.com/YBIFoundation/Dataset/raw/main/Movies%20Recommendation.csv')

df.head()

df.info()

df.shape

df.columns

df_features=df[['Movie_Genre','Movie_Keywords','Movie_Tagline','Movie_Cast','Movie_Director']].fillna('')

df_features.shape

df_features

x=df_features['Movie_Genre']+''+df_features['Movie_Keywords']+''+df_features['Movie_Tagline']+''+df_features['Movie_Cast']+''+df_features['Movie_Director']
x

x.shape

from sklearn.feature_extraction.text import TfidfVectorizer

tfidf=TfidfVectorizer()

x=tfidf.fit_transform(x)

x.shape

print(x)

from sklearn.metrics.pairwise import cosine_similarity

similarity_score =cosine_similarity(x)

similarity_score

similarity_score.shape

Favourite_Movie_Name=input('Enter Your Favourite Movie Name:')

All_Movies_Title_List= df['Movie_Title'].tolist()

import difflib

Movie_Reccomendation =difflib.get_close_matches(Favourite_Movie_Name,All_Movies_Title_List)
print(Movie_Reccomendation)

Close_Match=Movie_Reccomendation[0]
print(Close_Match)

Index_of_Close_Match_Movie=df[df.Movie_Title==Close_Match]['Movie_ID'].values[0]
print(Index_of_Close_Match_Movie)

#getting a list of similar movies

Reccomendation_Score=list(enumerate(similarity_score[Index_of_Close_Match_Movie]))
print(Reccomendation_Score)

len(Reccomendation_Score)

Sorted_Similar_Movies=sorted(Reccomendation_Score,key=lambda x:x[1],reverse=True)
print(Sorted_Similar_Movies)

#printing the name of movies
i=1
for movie in Sorted_Similar_Movies:
  index=movie[0]
  title_from_index=df[df.index==index]['Movie_Title'].values[0]
  if(i<31):
    print(i,'.',title_from_index)
    i+=1





"""# New Section"""